// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View>
  <View
    accessibilityIgnoresInvertColors={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "purple",
        "borderBottomColor": "#f2f2f2",
        "borderBottomWidth": 0.5,
        "flexDirection": "row",
        "height": 64,
        "justifyContent": "space-between",
        "paddingHorizontal": 10,
        "paddingTop": 20,
      }
    }
  >
    <Image
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "height": 64,
            "width": undefined,
          },
          undefined,
        ]
      }
      testID="headerContainer"
    />
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "flex": 1,
        }
      }
    >
      <View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text />
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 3,
        }
      }
    >
      <Text
        numberOfLines={1}
        style={
          Object {
            "color": "#fff",
            "fontSize": 20,
          }
        }
        text="Search"
        theme={
          Object {
            "colors": Object {
              "disabled": "hsl(208, 8%, 90%)",
              "divider": "#bcbbc1",
              "error": "#ff190c",
              "grey0": "#393e42",
              "grey1": "#43484d",
              "grey2": "#5e6977",
              "grey3": "#86939e",
              "grey4": "#bdc6cf",
              "grey5": "#e1e8ee",
              "greyOutline": "#bbb",
              "platform": Object {
                "android": Object {
                  "error": "#f44336",
                  "primary": "#2196f3",
                  "secondary": "#9C27B0",
                  "success": "#4caf50",
                  "warning": "#ffeb3b",
                },
                "ios": Object {
                  "error": "#ff3b30",
                  "primary": "#007aff",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
              },
              "primary": "#2089dc",
              "searchBg": "#303337",
              "secondary": "#8F0CE8",
              "success": "#52c41a",
              "warning": "#faad14",
            },
          }
        }
      >
        Search
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "flex": 1,
        }
      }
    >
      <View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#f5eeed",
        "borderBottomColor": "lightgrey",
        "borderBottomWidth": 1,
        "borderTopColor": "lightgrey",
        "borderTopWidth": 1,
        "flexDirection": "row",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "paddingHorizontal": 5,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "justifyContent": "center",
          }
        }
        theme={
          Object {
            "colors": Object {
              "disabled": "hsl(208, 8%, 90%)",
              "divider": "#bcbbc1",
              "error": "#ff190c",
              "grey0": "#393e42",
              "grey1": "#43484d",
              "grey2": "#5e6977",
              "grey3": "#86939e",
              "grey4": "#bdc6cf",
              "grey5": "#e1e8ee",
              "greyOutline": "#bbb",
              "platform": Object {
                "android": Object {
                  "error": "#f44336",
                  "primary": "#2196f3",
                  "secondary": "#9C27B0",
                  "success": "#4caf50",
                  "warning": "#ffeb3b",
                },
                "ios": Object {
                  "error": "#ff3b30",
                  "primary": "#007aff",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
              },
              "primary": "#2089dc",
              "searchBg": "#303337",
              "secondary": "#8F0CE8",
              "success": "#52c41a",
              "warning": "#faad14",
            },
          }
        }
        underlayColor="lightgrey"
      >
        <Text />
      </View>
    </View>
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="What are you looking for?"
      selectionColor="purple"
      style={
        Object {
          "flex": 1,
          "fontSize": 16,
        }
      }
      underlineColorAndroid="transparent"
      value="Drake"
    />
    <View
      style={
        Object {
          "borderLeftColor": "lightgray",
          "borderLeftWidth": 1,
          "flexDirection": "row",
          "height": "100%",
          "margin": 0,
          "paddingLeft": 20,
          "paddingTop": 7,
          "width": 100,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "alignSelf": "stretch",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
          testID="ios_touchable_wrapper"
        >
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                }
              }
            >
              Artist
            </Text>
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "transparent",
                    "justifyContent": "center",
                  }
                }
                theme={
                  Object {
                    "colors": Object {
                      "disabled": "hsl(208, 8%, 90%)",
                      "divider": "#bcbbc1",
                      "error": "#ff190c",
                      "grey0": "#393e42",
                      "grey1": "#43484d",
                      "grey2": "#5e6977",
                      "grey3": "#86939e",
                      "grey4": "#bdc6cf",
                      "grey5": "#e1e8ee",
                      "greyOutline": "#bbb",
                      "platform": Object {
                        "android": Object {
                          "error": "#f44336",
                          "primary": "#2196f3",
                          "secondary": "#9C27B0",
                          "success": "#4caf50",
                          "warning": "#ffeb3b",
                        },
                        "ios": Object {
                          "error": "#ff3b30",
                          "primary": "#007aff",
                          "secondary": "#5856d6",
                          "success": "#4cd964",
                          "warning": "#ffcc00",
                        },
                      },
                      "primary": "#2089dc",
                      "searchBg": "#303337",
                      "secondary": "#8F0CE8",
                      "success": "#52c41a",
                      "warning": "#faad14",
                    },
                  }
                }
                underlayColor="white"
              >
                <Text />
              </View>
            </View>
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          testID="ios_modal"
          transparent={true}
          visible={false}
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "opacity": 1,
              }
            }
          />
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#EFF1F2",
                  "borderTopColor": "#919498",
                  "borderTopWidth": 0.5,
                  "flexDirection": "row",
                  "height": 44,
                  "justifyContent": "space-between",
                  "paddingHorizontal": 10,
                },
                undefined,
              ]
            }
            testID="done_bar"
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  undefined,
                ]
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderColor": "#D0D4DB",
                        "borderRightWidth": 1.5,
                        "borderTopWidth": 1.5,
                        "height": 15,
                        "width": 15,
                      },
                      undefined,
                      Object {
                        "marginLeft": 11,
                        "transform": Array [
                          Object {
                            "translateY": 4,
                          },
                          Object {
                            "rotate": "-45deg",
                          },
                        ],
                      },
                      undefined,
                      Object {},
                    ]
                  }
                />
              </View>
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderColor": "#D0D4DB",
                        "borderRightWidth": 1.5,
                        "borderTopWidth": 1.5,
                        "height": 15,
                        "width": 15,
                      },
                      undefined,
                      Object {
                        "marginLeft": 22,
                        "transform": Array [
                          Object {
                            "translateY": -5,
                          },
                          Object {
                            "rotate": "135deg",
                          },
                        ],
                      },
                      undefined,
                      Object {},
                    ]
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 4,
                  "left": 4,
                  "right": 4,
                  "top": 4,
                }
              }
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              testID="done_button"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFE",
                      "fontSize": 15,
                      "fontWeight": "bold",
                      "paddingRight": 2,
                      "paddingTop": 1,
                    },
                    undefined,
                  ]
                }
              >
                Done
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#D0D4DB",
                  "height": 215,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <View>
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "Artist",
                      "textColor": undefined,
                      "value": "Artist",
                    },
                    Object {
                      "label": "Album",
                      "textColor": undefined,
                      "value": "Album",
                    },
                    Object {
                      "label": "Track",
                      "textColor": undefined,
                      "value": "Track",
                    },
                    Object {
                      "label": "Playlist",
                      "textColor": undefined,
                      "value": "Playlist",
                    },
                  ]
                }
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
              />
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "margin": 10,
      }
    }
  >
    <View
      style={
        Object {
          "paddingHorizontal": 7,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#993399",
            "fontFamily": "Avenir",
            "fontSize": 15,
            "fontWeight": "bold",
          }
        }
      >
        Popular
      </Text>
    </View>
    <View
      style={
        Object {
          "borderLeftColor": "grey",
          "borderLeftWidth": 1,
          "paddingHorizontal": 7,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "grey",
            "fontFamily": "Avenir",
            "fontSize": 15,
          }
        }
      >
        New
      </Text>
    </View>
    <View
      style={
        Object {
          "borderLeftColor": "grey",
          "borderLeftWidth": 1,
          "paddingHorizontal": 7,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "grey",
            "fontFamily": "Avenir",
            "fontSize": 15,
          }
        }
      >
        ABC
      </Text>
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(52, 52, 52, 0.6)",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "white",
            "borderRadius": 20,
            "flex": 0.6,
            "flexDirection": "column",
            "position": "absolute",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#6A0070",
              "fontSize": 24,
              "marginLeft": 15,
              "marginTop": 20,
            }
          }
        >
          Add to Playroll
        </Text>
        <View
          style={
            Object {
              "marginBottom": 10,
              "marginLeft": 50,
              "marginRight": 50,
              "marginTop": 10,
              "shadowColor": "black",
              "shadowOffset": Object {
                "height": 2,
                "width": 0,
              },
              "shadowOpacity": 0.3,
            }
          }
        >
          <Image
            source={
              Object {
                "uri": undefined,
              }
            }
            style={
              Object {
                "borderRadius": 5,
                "height": 200,
                "width": 200,
              }
            }
          />
        </View>
        <Text
          style={
            Object {
              "color": "#6A0070",
              "fontSize": 20,
              "marginLeft": 50,
            }
          }
        />
        <Text
          style={
            Object {
              "color": "#6A0070",
              "fontSize": 20,
              "marginLeft": 50,
            }
          }
        />
        <View
          style={
            Object {
              "height": 100,
              "marginBottom": 0,
              "marginLeft": "auto",
              "marginRight": "auto",
              "width": 200,
            }
          }
        >
          <RCTSegmentedControl
            enabled={true}
            onChange={[Function]}
            style={
              Array [
                Object {
                  "height": 28,
                },
                undefined,
              ]
            }
            tintColor="#6A0070"
            values={
              Array [
                "In Order",
                "Random",
              ]
            }
          />
          <View
            style={
              Object {
                "display": "flex",
                "flexDirection": "row",
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              blurOnSubmit={false}
              enablesReturnKeyAutomatically={true}
              placeholder="How many?"
              returnKeyType="next"
              style={
                Object {
                  "alignItems": "flex-end",
                  "backgroundColor": "white",
                  "borderColor": "#6A0070",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "black",
                  "fontSize": 12,
                  "height": 40,
                  "marginTop": 10,
                  "paddingBottom": 12,
                  "paddingHorizontal": 10,
                  "paddingTop": 13,
                  "width": 100,
                }
              }
              underlineColorAndroid="transparent"
            />
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "stretch",
                  },
                  undefined,
                ]
              }
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                testID="ios_touchable_wrapper"
              >
                <TextInput
                  allowFontScaling={true}
                  editable={false}
                  style={
                    Array [
                      Object {
                        "alignItems": "flex-end",
                        "backgroundColor": "white",
                        "borderColor": "#6A0070",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "color": "black",
                        "fontSize": 12,
                        "height": 40,
                        "marginTop": 10,
                        "paddingBottom": 12,
                        "paddingHorizontal": 10,
                        "paddingTop": 13,
                        "width": 100,
                      },
                      Object {
                        "color": "#C7C7CD",
                      },
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value="Play all tracks"
                />
              </View>
              <Modal
                hardwareAccelerated={false}
                supportedOrientations={
                  Array [
                    "portrait",
                    "landscape",
                  ]
                }
                testID="ios_modal"
                transparent={true}
                visible={false}
              >
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "flex": 1,
                      "opacity": 1,
                    }
                  }
                />
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#EFF1F2",
                        "borderTopColor": "#919498",
                        "borderTopWidth": 0.5,
                        "flexDirection": "row",
                        "height": 44,
                        "justifyContent": "space-between",
                        "paddingHorizontal": 10,
                      },
                      undefined,
                    ]
                  }
                  testID="done_bar"
                >
                  <View
                    style={
                      Array [
                        Object {
                          "flexDirection": "row",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      accessible={true}
                      isTVSelectable={true}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderColor": "#D0D4DB",
                              "borderRightWidth": 1.5,
                              "borderTopWidth": 1.5,
                              "height": 15,
                              "width": 15,
                            },
                            undefined,
                            Object {
                              "marginLeft": 11,
                              "transform": Array [
                                Object {
                                  "translateY": 4,
                                },
                                Object {
                                  "rotate": "-45deg",
                                },
                              ],
                            },
                            undefined,
                            Object {},
                          ]
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      isTVSelectable={true}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderColor": "#D0D4DB",
                              "borderRightWidth": 1.5,
                              "borderTopWidth": 1.5,
                              "height": 15,
                              "width": 15,
                            },
                            undefined,
                            Object {
                              "marginLeft": 22,
                              "transform": Array [
                                Object {
                                  "translateY": -5,
                                },
                                Object {
                                  "rotate": "135deg",
                                },
                              ],
                            },
                            undefined,
                            Object {},
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    accessible={true}
                    hitSlop={
                      Object {
                        "bottom": 4,
                        "left": 4,
                        "right": 4,
                        "top": 4,
                      }
                    }
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    testID="done_button"
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#007AFE",
                            "fontSize": 15,
                            "fontWeight": "bold",
                            "paddingRight": 2,
                            "paddingTop": 1,
                          },
                          undefined,
                        ]
                      }
                    >
                      Done
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#D0D4DB",
                        "height": 215,
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  <View>
                    <RCTPicker
                      items={
                        Array [
                          Object {
                            "label": "Play all tracks",
                            "textColor": undefined,
                            "value": "Original",
                          },
                          Object {
                            "label": "Number of songs",
                            "textColor": undefined,
                            "value": "Number",
                          },
                        ]
                      }
                      onChange={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      selectedIndex={0}
                      style={
                        Array [
                          Object {
                            "height": 216,
                          },
                          undefined,
                        ]
                      }
                    />
                  </View>
                </View>
              </Modal>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "bottom": 10,
              "display": "flex",
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginLeft": 20,
              }
            }
          >
            <Text
              style={null}
            >
              Continue
            </Text>
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "marginRight": 20,
              }
            }
          >
            <Text
              style={null}
            >
              Close
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
