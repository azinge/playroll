// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={false}
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(52, 52, 52, 0.6)",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "white",
          "borderRadius": 20,
          "flex": 0.6,
          "flexDirection": "column",
          "position": "absolute",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#6A0070",
            "fontSize": 24,
            "marginLeft": 15,
            "marginTop": 20,
          }
        }
      >
        Add to Playroll
      </Text>
      <View
        style={
          Object {
            "marginBottom": 10,
            "marginLeft": 50,
            "marginRight": 50,
            "marginTop": 10,
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.3,
          }
        }
      >
        <Image
          source={
            Object {
              "uri": undefined,
            }
          }
          style={
            Object {
              "borderRadius": 5,
              "height": 200,
              "width": 200,
            }
          }
        />
      </View>
      <Text
        style={
          Object {
            "color": "#6A0070",
            "fontSize": 20,
            "marginLeft": 50,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "#6A0070",
            "fontSize": 20,
            "marginLeft": 50,
          }
        }
      />
      <View
        style={
          Object {
            "height": 100,
            "marginBottom": 0,
            "marginLeft": "auto",
            "marginRight": "auto",
            "width": 200,
          }
        }
      >
        <RCTSegmentedControl
          enabled={true}
          onChange={[Function]}
          style={
            Array [
              Object {
                "height": 28,
              },
              undefined,
            ]
          }
          tintColor="#6A0070"
          values={
            Array [
              "Popular",
              "Random",
            ]
          }
        />
        <View
          style={
            Object {
              "display": "flex",
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            allowFontScaling={true}
            blurOnSubmit={false}
            enablesReturnKeyAutomatically={true}
            placeholder="Mai = Waifu"
            returnKeyType="next"
            style={
              Object {
                "alignItems": "flex-end",
                "backgroundColor": "white",
                "borderColor": "#6A0070",
                "borderRadius": 4,
                "borderWidth": 1,
                "color": "black",
                "fontSize": 12,
                "height": 40,
                "marginTop": 10,
                "paddingBottom": 12,
                "paddingHorizontal": 10,
                "paddingTop": 13,
                "width": 100,
              }
            }
            underlineColorAndroid="transparent"
          />
          <View
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              pointerEvents="box-only"
            >
              <TextInput
                allowFontScaling={true}
                editable={false}
                style={
                  Array [
                    Object {
                      "paddingRight": 30,
                    },
                    Object {
                      "alignItems": "flex-end",
                      "backgroundColor": "white",
                      "borderColor": "#6A0070",
                      "borderRadius": 4,
                      "borderWidth": 1,
                      "color": "black",
                      "fontSize": 12,
                      "height": 40,
                      "marginTop": 10,
                      "paddingBottom": 12,
                      "paddingHorizontal": 10,
                      "paddingTop": 13,
                      "width": 100,
                    },
                    Object {
                      "color": "#C7C7CD",
                    },
                  ]
                }
                underlineColorAndroid="transparent"
                value="Minutes..."
              />
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderLeftColor": "transparent",
                      "borderLeftWidth": 10,
                      "borderRightColor": "transparent",
                      "borderRightWidth": 10,
                      "borderTopColor": "gray",
                      "borderTopWidth": 10,
                      "height": 0,
                      "position": "absolute",
                      "right": 10,
                      "top": 20,
                      "width": 0,
                    },
                    undefined,
                  ]
                }
                testID="icon_ios"
              />
            </View>
            <Modal
              hardwareAccelerated={false}
              supportedOrientations={
                Array [
                  "portrait",
                  "landscape",
                ]
              }
              testID="RNPickerSelectModal"
              transparent={true}
              visible={false}
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                  }
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#EFF1F2",
                      "borderTopColor": "#919498",
                      "borderTopWidth": 0.5,
                      "flexDirection": "row",
                      "height": 44,
                      "justifyContent": "space-between",
                      "zIndex": 2,
                    },
                    undefined,
                  ]
                }
                testID="done_bar"
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                      "flexDirection": "row",
                      "marginLeft": 15,
                    }
                  }
                >
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderRightColor": "#D0D4DB",
                            "borderRightWidth": 1.5,
                            "borderTopColor": "#D0D4DB",
                            "borderTopWidth": 1.5,
                            "height": 15,
                            "width": 15,
                          },
                          undefined,
                          Object {
                            "transform": Array [
                              Object {
                                "translateY": 17,
                              },
                              Object {
                                "rotate": "-45deg",
                              },
                            ],
                          },
                          undefined,
                          Object {},
                        ]
                      }
                    />
                  </View>
                  <View
                    style={
                      Object {
                        "marginHorizontal": 10,
                      }
                    }
                  />
                  <View
                    accessible={true}
                    isTVSelectable={true}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderRightColor": "#D0D4DB",
                            "borderRightWidth": 1.5,
                            "borderTopColor": "#D0D4DB",
                            "borderTopWidth": 1.5,
                            "height": 15,
                            "width": 15,
                          },
                          undefined,
                          Object {
                            "transform": Array [
                              Object {
                                "translateY": 8,
                              },
                              Object {
                                "rotate": "135deg",
                              },
                            ],
                          },
                          undefined,
                          Object {},
                        ]
                      }
                    />
                  </View>
                </View>
                <View
                  accessible={true}
                  hitSlop={
                    Object {
                      "bottom": 2,
                      "left": 2,
                      "right": 2,
                      "top": 2,
                    }
                  }
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  testID="done_button"
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#007AFE",
                          "fontSize": 18,
                          "fontWeight": "bold",
                          "padding": 10,
                        },
                        undefined,
                      ]
                    }
                  >
                    Done
                  </Text>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#D0D4DB",
                      "height": 215,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
              >
                <View>
                  <RCTPicker
                    items={
                      Array [
                        Object {
                          "label": "Minutes...",
                          "textColor": undefined,
                          "value": null,
                        },
                        Object {
                          "label": "Songs",
                          "textColor": undefined,
                          "value": "songs",
                        },
                        Object {
                          "label": "Minutes",
                          "textColor": undefined,
                          "value": "minutes",
                        },
                      ]
                    }
                    onChange={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    selectedIndex={0}
                    style={
                      Array [
                        Object {
                          "height": 216,
                        },
                        undefined,
                      ]
                    }
                  />
                </View>
              </View>
            </Modal>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "bottom": 10,
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginLeft": 20,
            }
          }
        >
          <Text
            style={null}
          >
            Continue
          </Text>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginRight": 20,
            }
          }
        >
          <Text
            style={null}
          >
            Close
          </Text>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
